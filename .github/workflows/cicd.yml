name: Java CI/CD with Gradle

on:
  push:
    branches: [ "main", "test" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main repo with submodules
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.GH_TOKEN }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Create resources directory if not exists
        run: mkdir -p ./src/main/resources

      - name: Copy application-prod.yml from submodule
        run: cp ./config/application-prod.yml ./src/main/resources/application-prod.yml

      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      - name: Clean and build jar with prod config
        run: ./gradlew clean build -x test

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker image
        run: docker build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:prod .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:prod

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: SSH Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.SERVER_DOMAIN }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:prod

            sudo docker stop app-container || true
            sudo docker rm app-container || true

            sudo docker run -d --name app-container -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE_NAME }}:prod
